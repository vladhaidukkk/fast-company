{"version":3,"sources":["reportWebVitals.js","services/localStorage.service.js","services/auth.service.js","services/http.service.js","services/user.service.js","utils/history.js","utils/getAuthErrorMessage.js","store/reducers/users.js","components/ui/account.jsx","components/ui/navbar.jsx","utils/mockData.js","pages/main.jsx","components/common/form/textField.jsx","components/common/form/checkboxField.jsx","components/ui/loginForm.jsx","utils/validator.js","components/common/form/selectField.jsx","components/common/form/radioField.jsx","components/common/form/multiSelectField.jsx","services/quality.service.js","utils/isOutdated.js","store/reducers/qualities.js","services/profession.service.js","store/reducers/professions.js","components/ui/registerForm.jsx","pages/auth.jsx","components/ui/userCard.jsx","components/ui/qualities.jsx","components/ui/qualitiesCard.jsx","utils/date.js","components/common/comments/comment.jsx","components/common/comments/commentsList.jsx","components/common/form/textareaField.jsx","components/common/comments/commentForm.jsx","services/comment.service.js","store/reducers/comments.js","components/ui/comments.jsx","components/ui/completedMeetingsCard.jsx","components/layout/userLayout/index.js","components/layout/userLayout/userLayout.jsx","components/common/groupList.jsx","components/ui/status.jsx","components/common/table/tableHeader.jsx","components/common/table/tableBody.jsx","components/common/table/table.jsx","components/common/table/index.js","components/ui/bookmark.jsx","components/ui/profession.jsx","components/ui/usersTable.jsx","components/common/pagination.jsx","components/common/search.jsx","components/layout/usersListLayout/index.js","components/layout/usersListLayout/usersListLayout.jsx","utils/paginate.js","components/layout/editUserLayout/editUserLayout.jsx","components/layout/editUserLayout/index.js","components/ui/hoc/usersLoader.jsx","pages/users.jsx","pages/error404.jsx","components/common/protectedRoute.jsx","components/ui/hoc/appLoader.jsx","app.jsx","store/index.js","store/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TOKEN_KEY","REFRESH_KEY","USERID_KEY","EXPIRES_KEY","setTokens","idToken","refreshToken","localId","expiresIn","expiresDate","Date","now","localStorage","setItem","toString","localStorageService","getAccessToken","getItem","getRefreshToken","getUserId","getTokenExpiresDate","removeTokens","removeItem","httpAuth","axios","create","baseURL","configFile","isFirebase","apiEndpoint","params","key","process","REACT_APP_FIREBASE_KEY","undefined","authService","register","payload","a","endpoint","body","email","password","returnSecureToken","post","data","login","exchangeToken","grant_type","refresh_token","http","firebaseApiEndpoint","interceptors","request","use","config","isExpired","containSlash","test","url","slice","id_token","user_id","expires_in","accessToken","auth","userId","headers","Authorization","error","Promise","reject","response","res","content","_id","Object","values","status","toast","httpService","get","put","delete","patch","userEndpoint","userService","getCurrentUser","id","history","createBrowserHistory","getAuthErrorMessage","message","initialState","entities","isLoading","isLoggedIn","dataLoaded","usersSlice","createSlice","name","reducers","received","state","action","requested","requestFailed","authenticated","authFailed","userCreated","push","loggedOut","userUpdated","index","findIndex","user","authRequested","actions","createUserRequested","createAction","createUserFailed","updateUserFailed","updateUserRequested","fetchUsers","dispatch","createUser","updateCurrentUser","getState","users","getUserById","find","usersReducer","reducer","Account","useDispatch","currentUser","useSelector","useState","isOpened","setOpened","className","onClick","prev","src","image","alt","height","to","type","Navbar","useMockData","statusConsts","setError","setStatus","count","setCount","progress","setProgress","summaryCount","professions","length","qualities","incrementCount","useEffect","newProgress","Math","floor","countProgress","initialize","prof","qual","Main","TextField","label","value","onChange","isPassword","passwordVisibility","setPasswordVisibility","htmlFor","target","defaultProps","CheckboxField","children","checked","LoginForm","useHistory","remember","setData","errors","setErrors","loginError","validationScheme","yup","shape","required","matches","validate","path","handleChange","dataItem","prevState","onSubmit","event","preventDefault","isValid","redirect","location","from","pathname","code","errMessage","disabled","keys","validator","rule","ruleName","SelectField","options","defaultOption","Array","isArray","map","option","RadioField","capitalize","MultiSelectField","defaultValue","optionsArray","closeMenuOnSelect","isMulti","classNamePrefix","qualityService","isOutdated","date","outDate","qualitiesSlice","lastFetch","fetchQualities","qualitiesReducer","professionService","professionsSlice","professionsReducer","RegisterForm","profession","sex","acceptLicense","professionsList","qualitiesList","quality","registerError","validationConfig","isRequired","trim","isEmail","hasCapital","hasDigit","noSpaces","correctLength","newData","q","completedMeetings","rate","avatarImg","random","substring","Auth","component","UserCard","currentUserId","width","role","Qualities","ids","items","color","QualitiesCard","formatMonth","monthNumber","formatDate","inpDate","diffInMinutes","getMilliseconds","diffInHours","diffInYears","getFullYear","getHours","getMinutes","getDate","getMonth","Comment","creatorId","createdAt","onDelete","pageId","useParams","creator","CommentsList","_","orderBy","comment","rows","initialData","CommentForm","commentEndpoint","commentService","getById","equalTo","commentsSlice","commentCreated","commentDeleted","filter","createCommentFailed","createCommentRequested","deleteCommentFailed","deleteCommentRequested","commentsReducer","Comments","comments","statusText","commentData","nanoid","deleteComment","CompletedMeetingsCard","amount","UserLayout","GroupList","onItemSelect","uniqueProp","contentProp","selectedItem","item","Status","usersAmount","TableHeader","columns","onSort","sortedBy","renderContent","column","iter","order","scope","TableBody","renderUserLink","Table","Bookmark","selected","onBookmarkToggle","Profession","getProfessionById","UsersTable","bookmark","Pagination","itemsAmount","itemsOnPage","currentIndex","onPaginate","pagesAmount","ceil","pageIndexes","range","pageIndex","Search","placeholder","UsersListLayout","filteredUsers","isLoadingProfessions","searchValue","setSearchValue","selectedProf","setSelectedProf","sortBy","setSortBy","setCurrentIndex","RegExp","usersCrop","startIndex","splice","paginate","newSortBy","console","log","EditUserLayout","qualitiesLoading","convertToUse","qualId","convertToPatch","handleSubmit","handleCancel","goBack","UsersLoader","Users","Error404","ProtectedRoute","Component","rest","render","props","AppLoader","isUsersLoading","App","exact","store","configureStore","combineReducers","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e109caf1.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const TOKEN_KEY = 'jwt-token';\nconst REFRESH_KEY = 'jwt-refresh-token';\nconst USERID_KEY = 'local_user_id';\nconst EXPIRES_KEY = 'jwt-expires';\n\nexport const setTokens = ({ idToken, refreshToken, localId, expiresIn = 3600 }) => {\n  const expiresDate = Date.now() + expiresIn * 1000;\n  localStorage.setItem(TOKEN_KEY, idToken);\n  localStorage.setItem(REFRESH_KEY, refreshToken);\n  localStorage.setItem(USERID_KEY, localId);\n  localStorage.setItem(EXPIRES_KEY, expiresDate.toString());\n};\n\nexport const getAccessToken = () => localStorage.getItem(TOKEN_KEY);\n\nexport const getRefreshToken = () => localStorage.getItem(REFRESH_KEY);\n\nexport const getUserId = () => localStorage.getItem(USERID_KEY);\n\nexport const getTokenExpiresDate = () => localStorage.getItem(EXPIRES_KEY);\n\nexport const removeTokens = () => {\n  localStorage.removeItem(TOKEN_KEY);\n  localStorage.removeItem(REFRESH_KEY);\n  localStorage.removeItem(USERID_KEY);\n  localStorage.removeItem(EXPIRES_KEY);\n};\n\nconst localStorageService = {\n  setTokens,\n  getAccessToken,\n  getRefreshToken,\n  getUserId,\n  getTokenExpiresDate,\n  removeTokens,\n};\n\nexport default localStorageService;\n","import axios from 'axios';\nimport configFile from '../config.json';\n\nconst httpAuth = axios.create({\n  baseURL: configFile.isFirebase\n    ? 'https://identitytoolkit.googleapis.com/v1/'\n    : `${configFile.apiEndpoint}auth/`,\n  params: {\n    key: configFile.isFirebase ? process.env.REACT_APP_FIREBASE_KEY : undefined,\n  },\n});\n\nconst authService = {\n  register: async (payload) => {\n    const endpoint = configFile.isFirebase ? 'accounts:signUp' : 'signUp';\n    const body = configFile.isFirebase\n      ? {\n          email: payload.email,\n          password: payload.password,\n          returnSecureToken: true,\n        }\n      : payload;\n    const { data } = await httpAuth.post(endpoint, body);\n\n    return data;\n  },\n  login: async ({ email, password }) => {\n    const endpoint = configFile.isFirebase ? 'accounts:signInWithPassword' : 'signInWithPassword';\n    const body = configFile.isFirebase\n      ? {\n          email,\n          password,\n          returnSecureToken: true,\n        }\n      : {\n          email,\n          password,\n        };\n    const { data } = await httpAuth.post(endpoint, body);\n\n    return data;\n  },\n  exchangeToken: async ({ refreshToken }) => {\n    if (configFile.isFirebase) {\n      const key = process.env.REACT_APP_FIREBASE_KEY;\n      const { data } = await axios.post(`https://securetoken.googleapis.com/v1/token?key=${key}`, {\n        grant_type: 'refresh_token',\n        refresh_token: refreshToken,\n      });\n      return data;\n    }\n    const { data } = await httpAuth.post('token', {\n      refresh_token: refreshToken,\n    });\n    return data;\n  },\n};\n\nexport default authService;\n","import { toast } from 'react-toastify';\nimport axios from 'axios';\nimport configFile from '../config.json';\nimport localStorageService from './localStorage.service';\nimport authService from './auth.service';\n\nconst http = axios.create({\n  baseURL: configFile.isFirebase ? configFile.firebaseApiEndpoint : configFile.apiEndpoint,\n});\n\nhttp.interceptors.request.use(\n  async (config) => {\n    const refreshToken = localStorageService.getRefreshToken();\n    const expiresIn = localStorageService.getTokenExpiresDate();\n    const isExpired = refreshToken && expiresIn < Date.now();\n\n    if (configFile.isFirebase) {\n      const containSlash = /\\/$/gi.test(config.url);\n      config.url = `${containSlash ? config.url.slice(0, -1) : config.url}.json`;\n\n      if (isExpired) {\n        const data = authService.exchangeToken({ refreshToken });\n        localStorageService.setTokens({\n          idToken: data.id_token,\n          refreshToken: data.refresh_token,\n          localId: data.user_id,\n          expiresIn: data.expires_in,\n        });\n      }\n\n      const accessToken = localStorageService.getAccessToken();\n      if (accessToken) {\n        config.params = { ...config.params, auth: accessToken };\n      }\n    } else {\n      if (isExpired) {\n        const data = authService.exchangeToken({ refreshToken });\n        localStorageService.setTokens({\n          idToken: data.accessToken,\n          refreshToken: data.refreshToken,\n          localId: data.userId,\n          expiresIn: data.expiresIn,\n        });\n      }\n\n      const accessToken = localStorageService.getAccessToken();\n      if (accessToken) {\n        config.headers = { ...config.headers, Authorization: `Bearer ${accessToken}` };\n      }\n    }\n\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nhttp.interceptors.response.use(\n  (res) => {\n    if (configFile.isFirebase) {\n      res.data = {\n        content: res.data && !res.data._id ? Object.values(res.data) : res.data,\n      };\n    }\n    return res;\n  },\n  (error) => {\n    const isExpected =\n      error.response && error.response.status >= 400 && error.response.status < 500;\n\n    if (!isExpected) {\n      toast('Something went wrong. Try later');\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nconst httpService = {\n  get: http.get,\n  post: http.post,\n  put: http.put,\n  delete: http.delete,\n  patch: http.patch,\n};\n\nexport default httpService;\n","import httpService from './http.service';\nimport localStorageService from './localStorage.service';\nimport configFile from '../config.json';\n\nconst userEndpoint = 'user/';\n\nconst userService = {\n  get: async () => {\n    const { data } = await httpService.get(userEndpoint);\n    return configFile.isFirebase ? data : { content: data };\n  },\n  create: async (payload) => {\n    const { data } = await httpService.put(userEndpoint + payload._id, payload);\n    return data;\n  },\n  getCurrentUser: async () => {\n    const userId = localStorageService.getUserId();\n    const { data } = await httpService.get(userEndpoint + userId);\n    return configFile.isFirebase ? data : { content: data };\n  },\n  patch: async (id, payload) => {\n    const { data } = await httpService.patch(userEndpoint + id, payload);\n    return configFile.isFirebase ? data : { content: data };\n  },\n};\n\nexport default userService;\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","export const getAuthErrorMessage = (message) => {\n  switch (message) {\n    case 'EMAIL_EXISTS':\n      return 'This email has already been registered';\n    case 'EMAIL_NOT_FOUND':\n      return 'Account with this email is not registered';\n    case 'INVALID_PASSWORD':\n      return 'Password is not correct';\n    default:\n      return 'Too many authentication requests';\n  }\n};\n","import { createSlice, createAction } from '@reduxjs/toolkit';\nimport userService from '../../services/user.service';\nimport authService from '../../services/auth.service';\nimport localStorageService, { setTokens } from '../../services/localStorage.service';\nimport history from '../../utils/history';\nimport { getAuthErrorMessage } from '../../utils/getAuthErrorMessage';\nimport configFile from '../../config.json';\n\nconst initialState = localStorageService.getAccessToken()\n  ? {\n      entities: null,\n      isLoading: true,\n      error: null,\n      auth: { userId: localStorageService.getUserId() },\n      isLoggedIn: true,\n      dataLoaded: false,\n    }\n  : {\n      entities: null,\n      isLoading: false,\n      error: null,\n      auth: null,\n      isLoggedIn: false,\n      dataLoaded: false,\n    };\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    received(state, action) {\n      state.entities = action.payload;\n      state.isLoading = false;\n      state.dataLoaded = true;\n    },\n    requested(state) {\n      state.isLoading = false;\n    },\n    requestFailed(state, action) {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n    authenticated(state, action) {\n      state.auth = action.payload;\n      state.isLoggedIn = true;\n    },\n    authFailed(state, action) {\n      state.error = action.payload;\n    },\n    userCreated(state, action) {\n      if (!state.entities) {\n        state.entities = [];\n      }\n      state.entities.push(action.payload);\n    },\n    loggedOut(state) {\n      state.entities = null;\n      state.isLoading = false;\n      state.auth = null;\n      state.isLoggedIn = false;\n      state.dataLoaded = false;\n    },\n    userUpdated(state, action) {\n      const index = state.entities.findIndex((user) => user._id === action.payload._id);\n      state.entities[index] = { ...state.entities[index], ...action.payload };\n    },\n    authRequested(state) {\n      state.error = null;\n    },\n  },\n});\n\nconst {\n  received,\n  requested,\n  requestFailed,\n  authenticated,\n  authFailed,\n  userCreated,\n  loggedOut,\n  userUpdated,\n  authRequested,\n} = usersSlice.actions;\nconst createUserRequested = createAction('users/createUserRequested');\nconst createUserFailed = createAction('users/createUserFailed');\nconst updateUserFailed = createAction('users/updateUserFailed');\nconst updateUserRequested = createAction('users/updateUserRequested');\n\nexport const fetchUsers = () => async (dispatch) => {\n  dispatch(requested());\n  try {\n    const { content } = await userService.get();\n    dispatch(received(content));\n  } catch (err) {\n    dispatch(requestFailed({ message: err.response }));\n  }\n};\n\nconst createUser = (payload) => async (dispatch) => {\n  dispatch(createUserRequested());\n  try {\n    const { content } = await userService.create(payload);\n    dispatch(userCreated(content));\n    history.push('/users');\n  } catch (err) {\n    dispatch(createUserFailed());\n  }\n};\n\nexport const register = (payload) => async (dispatch) => {\n  dispatch(authRequested());\n  try {\n    const data = await authService.register(payload);\n\n    if (configFile.isFirebase) {\n      setTokens(data);\n    } else {\n      setTokens({\n        idToken: data.accessToken,\n        localId: data.userId,\n        refreshToken: data.refreshToken,\n        expiresIn: data.expiresIn,\n      });\n    }\n\n    dispatch(authenticated({ userId: configFile.isFirebase ? data.localId : data.userId }));\n\n    if (configFile.isFirebase) {\n      dispatch(\n        createUser({\n          ...payload,\n          _id: data.localId,\n          completedMeetings: 0,\n          rate: 0,\n          avatarImg: `https://avatars.dicebear.com/api/avataaars/${(Math.random() + 1)\n            .toString(36)\n            .substring(7)}.svg`,\n        })\n      );\n    }\n\n    history.push('/users');\n  } catch (err) {\n    const { message, code } = err.response.data.error;\n\n    if (code === 400) {\n      const errMessage = getAuthErrorMessage(message);\n      dispatch(authFailed({ message: errMessage }));\n    } else {\n      dispatch(authFailed({ message: err.message }));\n    }\n  }\n};\n\nexport const login = (payload, redirect) => async (dispatch) => {\n  dispatch(authRequested());\n  try {\n    const data = await authService.login(payload);\n\n    if (configFile.isFirebase) {\n      setTokens(data);\n    } else {\n      setTokens({\n        idToken: data.accessToken,\n        localId: data.userId,\n        refreshToken: data.refreshToken,\n        expiresIn: data.expiresIn,\n      });\n    }\n\n    dispatch(authenticated({ userId: configFile.isFirebase ? data.localId : data.userId }));\n    history.push(redirect);\n  } catch (err) {\n    const { message, code } = err.response.data.error;\n\n    if (code === 400) {\n      const errMessage = getAuthErrorMessage(message);\n      dispatch(authFailed({ message: errMessage }));\n    } else {\n      dispatch(authFailed({ message: err.message }));\n    }\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorageService.removeTokens();\n  dispatch(loggedOut());\n  history.push('/');\n};\n\nexport const updateCurrentUser = (payload) => async (dispatch, getState) => {\n  dispatch(updateUserRequested());\n  try {\n    const id = getState().users.auth.userId;\n    const { content } = await userService.patch(id, {\n      _id: configFile.isFirebase ? id : undefined,\n      ...payload,\n    });\n    dispatch(userUpdated(content));\n    history.push(`/users/${id}`);\n  } catch (err) {\n    dispatch(updateUserFailed());\n  }\n};\n\nexport const getUsers =\n  () =>\n  ({ users }) =>\n    users.entities;\nexport const getUserById =\n  (id) =>\n  ({ users }) =>\n    users.entities ? users.entities.find((user) => user._id === id) : null;\nexport const getIsLoggedIn =\n  () =>\n  ({ users }) =>\n    users.isLoggedIn;\nexport const getDataStatus =\n  () =>\n  ({ users }) =>\n    users.dataLoaded;\nexport const getCurrentUserId =\n  () =>\n  ({ users }) =>\n    users.auth.userId;\nexport const getUsersLoadingStatus =\n  () =>\n  ({ users }) =>\n    users.isLoading;\nexport const getCurrentUserData =\n  () =>\n  ({ users }) =>\n    users.entities ? users.entities.find((user) => user._id === users.auth.userId) : null;\nexport const getAuthError = () => (state) => state.users.error;\n\nconst usersReducer = usersSlice.reducer;\nexport default usersReducer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCurrentUserData, logout } from '../../store/reducers/users';\n\nconst Account = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector(getCurrentUserData());\n  const [isOpened, setOpened] = useState(false);\n\n  const toggleDropdown = () => setOpened((prev) => !prev);\n\n  const handleLogOut = () => {\n    dispatch(logout());\n  };\n\n  if (!currentUser) return 'loading...';\n  return (\n    <div className=\"dropdown\" onClick={toggleDropdown}>\n      <div className=\"btn dropdown-toggle d-flex align-items-center\">\n        <img\n          src={currentUser.image}\n          alt=\"avatar\"\n          height=\"40\"\n          className=\"rounded-circle me-2 img-responsive\"\n        />\n        <span>{currentUser.name}</span>\n      </div>\n      <div className={`dropdown-menu ${isOpened ? 'show' : ''}`}>\n        <Link to={`/users/${currentUser._id}`} className=\"dropdown-item\">\n          Profile\n        </Link>\n        <button type=\"button\" className=\"dropdown-item\" onClick={handleLogOut}>\n          Log out\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Account from './account';\nimport { getIsLoggedIn } from '../../store/reducers/users';\n\nconst Navbar = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn());\n\n  return (\n    <div className=\"navbar bg-light mb-3\">\n      <div className=\"container-fluid\">\n        <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <NavLink to=\"/\" className=\"nav-link\">\n              Main\n            </NavLink>\n          </li>\n          {isLoggedIn && (\n            <li className=\"nav-item\">\n              <NavLink to=\"/users\" className=\"nav-link\">\n                Users\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className=\"d-flex\">\n          {isLoggedIn ? (\n            <Account />\n          ) : (\n            <NavLink to=\"/auth/login\" className=\"nav-link\">\n              Login\n            </NavLink>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { useEffect, useState } from 'react';\nimport httpService from '../services/http.service';\nimport professions from '../mockData/professions.json';\nimport qualities from '../mockData/qualities.json';\nimport users from '../mockData/users.json';\n\nconst useMockData = () => {\n  const statusConsts = {\n    idle: 'Not Started',\n    pending: 'In Process',\n    successed: 'Ready',\n    error: 'Error occurred',\n  };\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(statusConsts.idle);\n  const [count, setCount] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const summaryCount = professions.length + qualities.length + users.length;\n\n  const incrementCount = () => {\n    setCount((prev) => prev + 1);\n  };\n\n  const countProgress = () => {\n    const newProgress = Math.floor((count / summaryCount) * 100);\n    if (newProgress === 100) {\n      setStatus(statusConsts.successed);\n    }\n    setProgress(() => newProgress);\n  };\n\n  useEffect(() => {\n    if (status === statusConsts.idle && count !== 0) {\n      setStatus(statusConsts.pending);\n    }\n    countProgress();\n  }, [count]);\n\n  const initialize = async () => {\n    try {\n      for (const prof of professions) {\n        await httpService.put(`profession/${prof._id}`, prof);\n        incrementCount();\n      }\n      for (const qual of qualities) {\n        await httpService.put(`quality/${qual._id}`, qual);\n        incrementCount();\n      }\n      for (const user of users) {\n        await httpService.put(`user/${user._id}`, user);\n        incrementCount();\n      }\n    } catch (error) {\n      setError(error);\n      setStatus(statusConsts.error);\n    }\n  };\n\n  return {\n    error,\n    initialize,\n    status,\n    progress,\n  };\n};\n\nexport default useMockData;\n","import React from 'react';\nimport useMockData from '../utils/mockData';\n\nconst Main = () => {\n  const { initialize, status, error, progress } = useMockData();\n\n  const handleClick = () => {\n    initialize();\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>Main Page</h1>\n      <ul>\n        <li>\n          Status:&nbsp;\n          {status}\n        </li>\n        <li>\n          Progress:&nbsp;\n          {progress}%\n        </li>\n        {error && (\n          <li>\n            Error:&nbsp;\n            {error}\n          </li>\n        )}\n      </ul>\n      <button type=\"button\" className=\"btn btn-primary\" onClick={handleClick}>\n        initialize data\n      </button>\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n  const isPassword = type === 'password';\n  const [passwordVisibility, setPasswordVisibility] = useState(false);\n\n  const toggleTextVisibility = () => {\n    setPasswordVisibility(!passwordVisibility);\n  };\n\n  const getInputClasses = () => `form-control ${error ? 'is-invalid' : ''}`;\n\n  const handleChange = ({ target }) => onChange({ name, value: target.value });\n\n  return (\n    <div className=\"col mb-4\">\n      <label htmlFor={name} className=\"form-label\">\n        {label}\n      </label>\n      <div className=\"input-group has-validation\">\n        <input\n          id={name}\n          type={passwordVisibility ? 'text' : type}\n          value={value}\n          name={name}\n          onChange={handleChange}\n          className={getInputClasses()}\n        />\n        {isPassword && (\n          <button\n            className=\"btn btn-outline-secondary\"\n            type=\"button\"\n            onClick={toggleTextVisibility}\n          >\n            {passwordVisibility ? <i className=\"bi bi-eye-slash\" /> : <i className=\"bi bi-eye\" />}\n          </button>\n        )}\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nTextField.defaultProps = {\n  type: 'text',\n  error: '',\n};\n\nTextField.propTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CheckboxField = ({ name, value, onChange, children, error }) => {\n  const getInputClasses = () => `form-check-input ${error ? 'is-invalid' : ''}`;\n\n  const handleChange = () => onChange({ name, value: !value });\n\n  return (\n    <div className=\"form-check mb-4\">\n      <input\n        className={getInputClasses()}\n        type=\"checkbox\"\n        checked={value}\n        id={name}\n        name={name}\n        onChange={handleChange}\n      />\n      <label className=\"form-check-label\" htmlFor={name}>\n        {children}\n      </label>\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nCheckboxField.defaultProps = {\n  error: '',\n};\n\nCheckboxField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  error: PropTypes.string,\n};\n\nexport default CheckboxField;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TextField from '../common/form/textField';\nimport CheckboxField from '../common/form/checkboxField';\nimport { getAuthError, login } from '../../store/reducers/users';\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n    remember: false,\n  });\n  const [errors, setErrors] = useState({});\n  const loginError = useSelector(getAuthError());\n\n  /* Here I use Validation with Yup library */\n  const validationScheme = yup.object().shape({\n    password: yup\n      .string()\n      .required('Password must be specified')\n      .matches(/(?=.*[A-Z])/, 'Password should have at least 1 capital letter')\n      .matches(/(?=.*[0-9])/, 'Password should have at least 1 digit')\n      .matches(/^\\S+$/, \"Password shouldn't have any spaces\")\n      .matches(/(?=.{8,16})/, 'Password length should be more than 8'),\n    email: yup.string().required('Email must be specified').email('Email input is invalid'),\n  });\n\n  const validate = async () => {\n    try {\n      await validationScheme.validate(data);\n      setErrors({});\n      return true;\n    } catch (error) {\n      setErrors({ [error.path]: error.message });\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const handleChange = (dataItem) => {\n    setData((prevState) => ({\n      ...prevState,\n      [dataItem.name]: dataItem.value,\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    validate().then((isValid) => {\n      if (!isValid) return;\n      const redirect = history.location.state?.from.pathname\n        ? history.location.state.from.pathname\n        : '/';\n      dispatch(login(data, redirect));\n    });\n  };\n\n  return (\n    <>\n      <h3 className=\"mb-4\">Login</h3>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          label=\"Email\"\n          name=\"email\"\n          value={data.email}\n          onChange={handleChange}\n          error={errors.email}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          value={data.password}\n          onChange={handleChange}\n          error={errors.password}\n        />\n        <CheckboxField onChange={handleChange} name=\"remember\" value={data.remember}>\n          Remember account\n        </CheckboxField>\n        {loginError && <p className=\"text-danger\">{loginError.message}</p>}\n        <button\n          className=\"btn btn-primary w-100 mb-3\"\n          type=\"submit\"\n          disabled={Object.keys(errors).length !== 0}\n        >\n          Sign in\n        </button>\n        <div>\n          I does not have an account. &nbsp;\n          <Link to=\"/auth/register\">Create account</Link>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","export const validator = (data, config) => {\n  const errors = {};\n\n  const validate = (rule, dataItem) => rule(dataItem);\n\n  for (const key in data) {\n    for (const ruleName in config[key]) {\n      const error = validate(config[key][ruleName], data[key]);\n      if (error) {\n        errors[key] = error;\n        break;\n      }\n    }\n    if (Object.keys(errors).length === 1) break;\n  }\n\n  return errors;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SelectField = ({ label, options, name, value, onChange, error, defaultOption }) => {\n  const getSelectClasses = () => `form-select ${error ? 'is-invalid' : ''}`;\n\n  const getDefaultOption = () =>\n    Object.keys(options).length !== 0 ? defaultOption : 'Loading options...';\n\n  const renderOptions = () =>\n    Array.isArray(options)\n      ? Object.values(options)\n          .map((option) => {\n            const values = Object.values(option);\n            return {\n              value: values[0],\n              label: values[1],\n            };\n          })\n          .map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))\n      : options;\n\n  const handleChange = ({ target }) => onChange({ name, value: target.value });\n\n  return (\n    <div className=\"col mb-4\">\n      {label && (\n        <label htmlFor={name} className=\"form-label\">\n          {label}\n        </label>\n      )}\n      <select\n        id={name}\n        name={name}\n        value={value}\n        className={getSelectClasses()}\n        onChange={handleChange}\n      >\n        <option disabled value=\"\">\n          {getDefaultOption()}\n        </option>\n        {renderOptions()}\n      </select>\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nSelectField.defaultProps = {\n  label: '',\n  options: [],\n  error: '',\n  defaultOption: 'Choose...',\n};\n\nSelectField.propTypes = {\n  label: PropTypes.string,\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  defaultOption: PropTypes.string,\n};\n\nexport default SelectField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { capitalize } from 'lodash';\n\nconst RadioField = ({ label, name, value, onChange, options }) => {\n  const handleChange = ({ target }) => onChange({ name, value: target.value });\n\n  return (\n    <div className=\"col mb-4\">\n      <label className=\"form-label\">{label}</label>\n      <div>\n        {options.map((option) => (\n          <div key={option} className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name={name}\n              id={option}\n              value={option}\n              onChange={handleChange}\n              checked={value === option}\n            />\n            <label className=\"form-check-label\" htmlFor={option}>\n              {capitalize(option)}\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nRadioField.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default RadioField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\n\nconst MultiSelectField = ({ label, name, options, onChange, defaultValue }) => {\n  const optionsArray = !Array.isArray(options)\n    ? Object.values(options).map((option) => {\n        const values = Object.values(option);\n        return {\n          value: values[0],\n          label: values[1],\n        };\n      })\n    : options;\n\n  const handleChange = (value) => {\n    onChange({ name, value });\n  };\n\n  return (\n    <div className=\"col mb-4\">\n      <label className=\"form-label\">{label}</label>\n      <Select\n        closeMenuOnSelect={false}\n        isMulti\n        name={name}\n        defaultValue={defaultValue}\n        options={optionsArray}\n        className=\"basic-multi-select\"\n        classNamePrefix=\"select\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nMultiSelectField.defaultProps = {\n  options: [],\n};\n\nMultiSelectField.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onChange: PropTypes.func.isRequired,\n  defaultValue: PropTypes.array.isRequired,\n};\n\nexport default MultiSelectField;\n","import httpService from './http.service';\nimport configFile from '../config.json';\n\nconst qualityEndpoint = 'quality/';\n\nconst qualityService = {\n  get: async () => {\n    const { data } = await httpService.get(qualityEndpoint);\n    return configFile.isFirebase ? data : { content: data };\n  },\n};\n\nexport default qualityService;\n","export const isOutdated = (date, outDate) => Date.now() - date > outDate;\n","import { createSlice } from '@reduxjs/toolkit';\nimport qualityService from '../../services/quality.service';\nimport { isOutdated } from '../../utils/isOutdated';\n\nconst qualitiesSlice = createSlice({\n  name: 'qualities',\n  initialState: {\n    entities: null,\n    isLoading: true,\n    error: null,\n    lastFetch: null,\n  },\n  reducers: {\n    received(state, action) {\n      state.entities = action.payload;\n      state.isLoading = false;\n    },\n    requested(state) {\n      state.isLoading = true;\n      state.lastFetch = Date.now();\n    },\n    requestFailed(state, action) {\n      state.error = action.payload;\n      state.isLoading = false;\n      state.lastFetch = null;\n    },\n  },\n});\n\nconst { received, requested, requestFailed } = qualitiesSlice.actions;\n\nexport const fetchQualities = () => async (dispatch, getState) => {\n  const { lastFetch } = getState().qualities;\n  const outDate = 15 * 60 * 1000; // 15 minutes\n\n  if (isOutdated(lastFetch, outDate)) {\n    dispatch(requested());\n    try {\n      const { content } = await qualityService.get();\n      dispatch(received(content));\n    } catch (err) {\n      dispatch(requestFailed({ message: err.message }));\n    }\n  }\n};\n\nexport const getQualities = () => (state) => state.qualities.entities;\n\nexport const getQualitiesLoading = () => (state) => state.qualities.isLoading;\n\nexport const getQualitiesByIds = (ids) => (state) => {\n  const qualities = [];\n  if (state.qualities.entities) {\n    for (const id of ids) {\n      for (const quality of state.qualities.entities) {\n        if (quality._id === id) {\n          qualities.push(quality);\n          break;\n        }\n      }\n    }\n  }\n  return qualities;\n};\n\nconst qualitiesReducer = qualitiesSlice.reducer;\nexport default qualitiesReducer;\n","import httpService from './http.service';\nimport configFile from '../config.json';\n\nconst professionEndpoint = 'profession/';\n\nconst professionService = {\n  get: async () => {\n    const { data } = await httpService.get(professionEndpoint);\n    return configFile.isFirebase ? data : { content: data };\n  },\n};\n\nexport default professionService;\n","import { createSlice } from '@reduxjs/toolkit';\nimport professionService from '../../services/profession.service';\nimport { isOutdated } from '../../utils/isOutdated';\n\nconst professionsSlice = createSlice({\n  name: 'professions',\n  initialState: {\n    entities: null,\n    isLoading: true,\n    error: null,\n    lastFetch: null,\n  },\n  reducers: {\n    received(state, action) {\n      state.entities = action.payload;\n      state.isLoading = false;\n    },\n    requested(state) {\n      state.isLoading = false;\n      state.lastFetch = Date.now();\n    },\n    requestFailed(state, action) {\n      state.error = action.payload;\n      state.isLoading = false;\n      state.lastFetch = null;\n    },\n  },\n});\n\nconst { received, requested, requestFailed } = professionsSlice.actions;\n\nexport const fetchProfessions = () => async (dispatch, getState) => {\n  const { lastFetch } = getState().professions;\n  const outDate = 15 * 60 * 1000; // 15 minutes\n\n  if (isOutdated(lastFetch, outDate)) {\n    dispatch(requested());\n    try {\n      const { content } = await professionService.get();\n      dispatch(received(content));\n    } catch (err) {\n      dispatch(requestFailed({ message: err.message }));\n    }\n  }\n};\n\nexport const getProfessions =\n  () =>\n  ({ professions }) =>\n    professions.entities;\n\nexport const getProfessionsLoading =\n  () =>\n  ({ professions }) =>\n    professions.isLoading;\n\nexport const getProfessionById =\n  (id) =>\n  ({ professions }) => {\n    if (professions.entities) {\n      return professions.entities.find((prof) => prof._id === id);\n    }\n    return null;\n  };\n\nconst professionsReducer = professionsSlice.reducer;\nexport default professionsReducer;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { validator } from '../../utils/validator';\nimport TextField from '../common/form/textField';\nimport SelectField from '../common/form/selectField';\nimport RadioField from '../common/form/radioField';\nimport MultiSelectField from '../common/form/multiSelectField';\nimport CheckboxField from '../common/form/checkboxField';\nimport { getQualities } from '../../store/reducers/qualities';\nimport { getProfessions } from '../../store/reducers/professions';\nimport { getAuthError, register } from '../../store/reducers/users';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    profession: '',\n    sex: 'male',\n    qualities: [],\n    acceptLicense: false,\n  });\n  const professions = useSelector(getProfessions());\n  const professionsList = professions\n    ? professions.map((profession) => ({\n        value: profession._id,\n        label: profession.name,\n      }))\n    : [];\n  const qualities = useSelector(getQualities());\n  const qualitiesList = qualities\n    ? qualities.map((quality) => ({\n        value: quality._id,\n        label: quality.name,\n      }))\n    : [];\n  const [errors, setErrors] = useState({});\n  const registerError = useSelector(getAuthError());\n\n  const validationConfig = {\n    name: {\n      isRequired: (dataItem) => (dataItem.trim() === '' ? 'Name must be specified' : undefined),\n    },\n    email: {\n      isRequired: (dataItem) => (dataItem.trim() === '' ? 'Email must be specified' : undefined),\n      isEmail: (dataItem) =>\n        !/^\\S+@\\S+\\.\\S+$/.test(dataItem) ? 'Email input is invalid' : undefined,\n    },\n    password: {\n      isRequired: (dataItem) => (dataItem.trim() === '' ? 'Password must be specified' : undefined),\n      hasCapital: (dataItem) =>\n        !/[A-Z]/.test(dataItem) ? 'Password should have at least 1 capital letter' : undefined,\n      hasDigit: (dataItem) =>\n        !/\\d/.test(dataItem) ? 'Password should have at least 1 digit' : undefined,\n      noSpaces: (dataItem) =>\n        /\\s/.test(dataItem) ? \"Password shouldn't have any spaces\" : undefined,\n      correctLength: (dataItem) =>\n        dataItem.length < 8 || dataItem.length > 16\n          ? 'Password length should be from 8 to 16 characters'\n          : undefined,\n    },\n    profession: {\n      isRequired: (dataItem) =>\n        dataItem.trim() === '' ? 'Profession must be specified' : undefined,\n    },\n    acceptLicense: {\n      isRequired: (dataItem) => (!dataItem ? 'You must to accept the license' : undefined),\n    },\n  };\n\n  const validate = () => {\n    const errors = validator(data, validationConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const handleChange = (dataItem) => {\n    setData((prevState) => ({\n      ...prevState,\n      [dataItem.name]: dataItem.value,\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const newData = {\n      ...data,\n      qualities: data.qualities.map((q) => q.value),\n    };\n    dispatch(register(newData));\n  };\n\n  return (\n    <>\n      <h3 className=\"mb-4\">Register</h3>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          label=\"Name\"\n          name=\"name\"\n          value={data.name}\n          onChange={handleChange}\n          error={errors.name}\n        />\n        <TextField\n          label=\"Email\"\n          name=\"email\"\n          value={data.email}\n          onChange={handleChange}\n          error={errors.email}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          value={data.password}\n          onChange={handleChange}\n          error={errors.password}\n        />\n        <SelectField\n          label=\"Profession\"\n          options={professionsList}\n          name=\"profession\"\n          value={data.profession}\n          onChange={handleChange}\n          error={errors.profession}\n        />\n        <RadioField\n          label=\"Gender\"\n          onChange={handleChange}\n          name=\"sex\"\n          options={['male', 'female', 'other']}\n          value={data.sex}\n        />\n        <MultiSelectField\n          label=\"Qualities\"\n          name=\"qualities\"\n          options={qualitiesList}\n          onChange={handleChange}\n          defaultValue={data.qualities}\n        />\n        <CheckboxField\n          name=\"acceptLicense\"\n          value={data.acceptLicense}\n          onChange={handleChange}\n          error={errors.acceptLicense}\n        >\n          Accept the &nbsp;\n          <Link to=\"/auth/register/license\">license</Link>\n        </CheckboxField>\n        {registerError && <p className=\"text-danger\">{registerError.message}</p>}\n        <button\n          className=\"btn btn-primary w-100 mb-3\"\n          type=\"submit\"\n          disabled={Object.keys(errors).length !== 0}\n        >\n          Sign up\n        </button>\n        <div>\n          I have an account. &nbsp;\n          <Link to=\"/auth/login\">Sign in</Link>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport LoginForm from '../components/ui/loginForm';\nimport RegisterForm from '../components/ui/registerForm';\n\nconst Auth = () => (\n  <div className=\"container\">\n    <div className=\"row mt-4\">\n      <div className=\"col-md-6 offset-md-3 shadow p-4 rounded\">\n        <Switch>\n          <Route path=\"/auth/login\" component={LoginForm} />\n          <Route path=\"/auth/register\" component={RegisterForm} />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Auth;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getCurrentUserId } from '../../store/reducers/users';\n\nconst UserCard = ({ data }) => {\n  const currentUserId = useSelector(getCurrentUserId());\n  const { push } = useHistory();\n\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body\">\n        {currentUserId === data._id && (\n          <button\n            type=\"button\"\n            className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n            onClick={() => push(`/users/${data._id}/edit`)}\n          >\n            <i className=\"bi bi-gear\" />\n          </button>\n        )}\n        <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n          <img src={data.image} className=\"rounded-circle\" width=\"150\" alt=\"User avatar\" />\n          <div className=\"mt-3\">\n            <h4>{data.name}</h4>\n            <p className=\"text-secondary mb-1\">{data.profession.name}</p>\n            <div className=\"text-muted\">\n              <i className=\"bi bi-caret-down-fill text-primary\" role=\"button\" />\n              <i className=\"bi bi-caret-up text-secondary\" role=\"button\" />\n              <span className=\"ms-2\">{data.rate}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nUserCard.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default UserCard;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchQualities,\n  getQualitiesByIds,\n  getQualitiesLoading,\n} from '../../store/reducers/qualities';\n\nconst Qualities = ({ items }) => {\n  const dispatch = useDispatch();\n  const qualitiesList = useSelector(getQualitiesByIds(items));\n  const isLoading = useSelector(getQualitiesLoading());\n\n  useEffect(() => {\n    dispatch(fetchQualities());\n  }, []);\n\n  if (!isLoading) {\n    return qualitiesList.map((quality) => (\n      <span key={quality._id} className={`badge mx-1 bg-${quality.color}`}>\n        {quality.name}\n      </span>\n    ));\n  }\n  return 'loading...';\n};\n\nQualities.defaultProps = {\n  items: [],\n};\n\nQualities.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default Qualities;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Qualities from './qualities';\n\nconst QualitiesCard = ({ data }) => (\n  <div className=\"card mb-3\">\n    <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n      <h5 className=\"card-title\">\n        <span>Qualities</span>\n      </h5>\n      <p className=\"card-text\">\n        <Qualities items={data} />\n      </p>\n    </div>\n  </div>\n);\n\nQualitiesCard.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default QualitiesCard;\n","export const formatMonth = (monthNumber) => {\n  switch (monthNumber) {\n    case 0:\n      return 'January';\n    case 1:\n      return 'February';\n    case 2:\n      return 'Match';\n    case 3:\n      return 'April';\n    case 4:\n      return 'May';\n    case 5:\n      return 'June';\n    case 6:\n      return 'July';\n    case 7:\n      return 'August';\n    case 8:\n      return 'September';\n    case 9:\n      return 'October';\n    case 10:\n      return 'November';\n    case 11:\n      return 'December';\n    default:\n      return '';\n  }\n};\n\nexport const formatDate = (inpDate) => {\n  const date = new Date(inpDate);\n  const diff = Date.now() - date.getMilliseconds();\n  const diffInMinutes = diff / 1000 / 60;\n  const diffInHours = diffInMinutes / 60;\n  const diffInYears = date.getFullYear() - new Date().getFullYear();\n\n  if (diffInMinutes < 1) {\n    return '1 minute ago';\n  }\n  if (diffInMinutes < 5) {\n    return '5 minutes ago';\n  }\n  if (diffInMinutes < 10) {\n    return '10 minutes ago';\n  }\n  if (diffInMinutes < 30) {\n    return '30 minutes ago';\n  }\n  if (diffInHours < 24) {\n    return `${date.getHours()}:${date.getMinutes()}`;\n  }\n  if (diffInYears < 1) {\n    return `${date.getDate()} ${formatMonth(date.getMonth())}`;\n  }\n  return `${date.getDate()} ${formatMonth(date.getMonth())} ${date.getFullYear()} Year`;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { formatDate } from '../../../utils/date';\nimport { getCurrentUserId, getUserById } from '../../../store/reducers/users';\n\nconst Comment = ({ _id: id, userId: creatorId, content, createdAt, onDelete }) => {\n  const { userId: pageId } = useParams();\n  const currentUserId = useSelector(getCurrentUserId());\n  const creator = useSelector(getUserById(creatorId));\n\n  const handleDelete = () => {\n    onDelete(id);\n  };\n\n  return (\n    <div className=\"bg-light card-body  mb-3\">\n      {creator ? (\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"d-flex flex-start \">\n              <img\n                src={creator.image}\n                className=\"rounded-circle shadow-1-strong me-3\"\n                alt=\"avatar\"\n                width=\"65\"\n                height=\"65\"\n              />\n              <div className=\"flex-grow-1 flex-shrink-1\">\n                <div className=\"mb-4\">\n                  <div className=\"d-flex justify-content-between align-items-center\">\n                    <p className=\"mb-1 \">\n                      {creator.name}\n                      <span className=\"small\">\n                        {' - '}\n                        {formatDate(createdAt)}\n                      </span>\n                    </p>\n                    {(currentUserId === creatorId || currentUserId === pageId) && (\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-sm text-primary d-flex align-items-center\"\n                        onClick={handleDelete}\n                      >\n                        <i className=\"bi bi-x-lg\" />\n                      </button>\n                    )}\n                  </div>\n                  <p className=\"small mb-0\">{content}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n};\n\nComment.propTypes = {\n  _id: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  createdAt: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Comment from './comment';\n\nconst CommentsList = ({ data, onDelete }) => {\n  const orderedComments = _.orderBy(data, 'createdAt', 'desc');\n\n  return orderedComments.map((comment) => (\n    <Comment key={comment._id} {...comment} onDelete={onDelete} />\n  ));\n};\n\nCommentsList.defaultProps = {\n  data: [],\n};\n\nCommentsList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default CommentsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextField = ({ label, name, value, onChange, error }) => {\n  const getTextareaClasses = () => `form-control ${error ? 'is-invalid' : ''}`;\n\n  const handleChange = ({ target }) => onChange({ name, value: target.value });\n\n  return (\n    <div className=\"col mb-4\">\n      <label htmlFor={name} className=\"form-label\">\n        {label}\n      </label>\n      <div className=\"input-group has-validation\">\n        <textarea\n          id={name}\n          value={value}\n          name={name}\n          onChange={handleChange}\n          className={getTextareaClasses()}\n          rows=\"3\"\n        />\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nTextField.defaultProps = {\n  error: '',\n};\n\nTextField.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TextField;\n","import React, { useState } from 'react';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport TextareaField from '../form/textareaField';\n\nconst initialData = { content: '' };\n\nconst CommentForm = ({ onSubmit }) => {\n  const [data, setData] = useState(initialData);\n  const [errors, setErrors] = useState({});\n\n  /* Here I use Validation with Yup library */\n  const validationScheme = yup.object().shape({\n    content: yup.string().required(\"Message can't be empty\"),\n  });\n\n  const validate = async () => {\n    try {\n      await validationScheme.validate(data);\n      setErrors({});\n      return true;\n    } catch (error) {\n      setErrors({ [error.path]: error.message });\n      return false;\n    }\n  };\n\n  const handleChange = (dataItem) => {\n    setData((prevState) => ({\n      ...prevState,\n      [dataItem.name]: dataItem.value,\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    validate().then((isValid) => {\n      if (!isValid) return;\n      onSubmit(data);\n      setData(initialData);\n      setErrors({});\n    });\n  };\n\n  return (\n    <div className=\"card mb-2\">\n      <div className=\"card-body \">\n        <h3 className=\"mb-4\">New comment</h3>\n        <form onSubmit={handleSubmit}>\n          <TextareaField\n            label=\"Message\"\n            onChange={handleChange}\n            name=\"content\"\n            value={data.content}\n            error={errors.content}\n          />\n          <div className=\"d-flex justify-content-end\">\n            <button className=\"btn btn-primary\" type=\"submit\">\n              Publish\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default CommentForm;\n","import httpService from './http.service';\nimport configFile from '../config.json';\n\nconst commentEndpoint = 'comment/';\n\nconst commentService = {\n  getById: async (id) => {\n    const params = configFile.isFirebase\n      ? {\n          orderBy: '\"pageId\"',\n          equalTo: `\"${id}\"`,\n        }\n      : {\n          orderBy: 'pageId',\n          equalTo: id,\n        };\n    const { data } = await httpService.get(commentEndpoint, {\n      params,\n    });\n\n    return configFile.isFirebase ? data : { content: data };\n  },\n  create: async (payload) => {\n    if (configFile.isFirebase) {\n      const { data } = await httpService.put(commentEndpoint + payload._id, payload);\n      return data;\n    }\n    const { data } = await httpService.post(commentEndpoint, payload);\n    return { content: data };\n  },\n  delete: async (id) => {\n    const { data } = await httpService.delete(commentEndpoint + id);\n    return data;\n  },\n};\n\nexport default commentService;\n","import { createAction, createSlice } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nimport commentService from '../../services/comment.service';\nimport configFile from '../../config.json';\n\nconst commentsSlice = createSlice({\n  name: 'comments',\n  initialState: {\n    entities: null,\n    isLoading: true,\n    error: null,\n  },\n  reducers: {\n    received(state, action) {\n      state.entities = action.payload;\n      state.isLoading = false;\n    },\n    requested(state) {\n      state.isLoading = false;\n    },\n    requestFailed(state, action) {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n    commentCreated(state, action) {\n      state.entities.push(action.payload);\n    },\n    commentDeleted(state, action) {\n      state.entities = state.entities.filter((comment) => comment._id !== action.payload.id);\n    },\n  },\n});\n\nconst { received, requested, requestFailed, commentCreated, commentDeleted } =\n  commentsSlice.actions;\nconst createCommentFailed = createAction('comments/createCommentFailed');\nconst createCommentRequested = createAction('comments/createCommentRequested');\nconst deleteCommentFailed = createAction('comments/deleteCommentFailed');\nconst deleteCommentRequested = createAction('comments/deleteCommentRequested');\n\nexport const fetchComments = (id) => async (dispatch) => {\n  dispatch(requested());\n  try {\n    const { content } = await commentService.getById(id);\n    dispatch(received(content));\n  } catch (err) {\n    const { status, statusText: message } = err.response;\n    dispatch(requestFailed({ message, status }));\n  }\n};\n\nexport const createComment = (payload) => async (dispatch, getState) => {\n  dispatch(createCommentRequested());\n  try {\n    const { userId } = getState().users.auth;\n    const { content } = await commentService.create({\n      ...payload,\n      _id: configFile.isFirebase ? nanoid() : undefined,\n      userId,\n      createdAt: configFile.isFirebase ? Date.now() : undefined,\n    });\n    dispatch(commentCreated(content));\n  } catch {\n    dispatch(createCommentFailed());\n  }\n};\n\nexport const deleteComment = (id) => async (dispatch) => {\n  dispatch(deleteCommentRequested());\n  try {\n    await commentService.delete(id);\n    dispatch(commentDeleted({ id }));\n  } catch (error) {\n    dispatch(deleteCommentFailed());\n  }\n};\n\nexport const getComments =\n  () =>\n  ({ comments }) =>\n    comments.entities;\nexport const getCommentsLoading =\n  () =>\n  ({ comments }) =>\n    comments.isLoading;\n\nconst commentsReducer = commentsSlice.reducer;\nexport default commentsReducer;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CommentsList from '../common/comments/commentsList';\nimport CommentForm from '../common/comments/commentForm';\nimport {\n  createComment,\n  deleteComment,\n  fetchComments,\n  getComments,\n  getCommentsLoading,\n} from '../../store/reducers/comments';\n\nconst Comments = () => {\n  const { userId } = useParams();\n  const dispatch = useDispatch();\n  const comments = useSelector(getComments());\n  const isLoading = useSelector(getCommentsLoading());\n\n  useEffect(() => {\n    dispatch(fetchComments(userId));\n  }, [userId]);\n\n  const handleSubmit = (commentData) => {\n    dispatch(createComment({ ...commentData, pageId: userId }));\n  };\n\n  const handleCommentDelete = (id) => {\n    dispatch(deleteComment(id));\n  };\n\n  return (\n    <>\n      <div className=\"card mb-2\">\n        {' '}\n        <div className=\"card-body \">\n          <CommentForm onSubmit={handleSubmit} />\n        </div>\n      </div>\n      <div className=\"card mb-3\">\n        <div className=\"card-body \">\n          <h2>Comments</h2>\n          <hr />\n          {!isLoading ? (\n            <CommentsList data={comments} onDelete={handleCommentDelete} />\n          ) : (\n            'Loading comments...'\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Comments;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CompletedMeetingsCard = ({ amount }) => (\n  <div className=\"card mb-3\">\n    <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n      <h5 className=\"card-title\">\n        <span>Completed meetings</span>\n      </h5>\n      <h1 className=\"display-1\">{amount}</h1>\n    </div>\n  </div>\n);\n\nCompletedMeetingsCard.propTypes = {\n  amount: PropTypes.number.isRequired,\n};\n\nexport default CompletedMeetingsCard;\n","import UserLayout from './userLayout';\n\nexport default UserLayout;\n","import React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport UserCard from '../../ui/userCard';\nimport QualitiesCard from '../../ui/qualitiesCard';\nimport Comments from '../../ui/comments';\nimport CompletedMeetingsCard from '../../ui/completedMeetingsCard';\nimport { getUserById } from '../../../store/reducers/users';\n\nconst UserLayout = () => {\n  const { userId } = useParams();\n  const { push } = useHistory();\n  const user = useSelector(getUserById(userId));\n\n  if (!user) {\n    return (\n      <div className=\"m-2\">\n        <h2>\n          <span className=\"badge bg-danger\">User with this id does not exist</span>\n        </h2>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => push('/users')}>\n          All users\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mt-4\">\n      <div className=\"row gutters-sm\">\n        <div className=\"col-md-4 mb-3\">\n          <UserCard data={user} />\n          <QualitiesCard data={user.qualities} />\n          <CompletedMeetingsCard amount={user.completedMeetings} />\n        </div>\n        <div className=\"col-md-8\">\n          <Comments />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GroupList = ({ items, onItemSelect, uniqueProp, contentProp, selectedItem }) => (\n  <div className=\"list-group\">\n    {Object.values(items).map((item) => (\n      <button\n        key={item[uniqueProp]}\n        type=\"button\"\n        className={`list-group-item list-group-item-action${\n          item._id === selectedItem ? ' active' : ''\n        }`}\n        onClick={() => onItemSelect(item)}\n      >\n        {item[contentProp]}\n      </button>\n    ))}\n  </div>\n);\n\nGroupList.defaultProps = {\n  uniqueProp: '_id',\n  contentProp: 'name',\n  selectedItem: undefined,\n};\n\nGroupList.propTypes = {\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n  onItemSelect: PropTypes.func.isRequired,\n  uniqueProp: PropTypes.string,\n  contentProp: PropTypes.string,\n  selectedItem: PropTypes.string,\n};\n\nexport default GroupList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Status = ({ usersAmount }) => {\n  const formatStatus = () => {\n    if (usersAmount === 0) {\n      return <span className=\"badge bg-danger\">Никто с тобой не тусанет</span>;\n    }\n    if (usersAmount === 1) {\n      return (\n        <span className=\"badge bg-primary\">{`${usersAmount} человек тусанет с тобой сегодня`}</span>\n      );\n    }\n    if (usersAmount > 1 && usersAmount < 5) {\n      return (\n        <span className=\"badge bg-primary\">{`${usersAmount} человека тусанут с тобой сегодня`}</span>\n      );\n    }\n    return (\n      <span className=\"badge bg-primary\">{`${usersAmount} человек тусанет с тобой сегодня`}</span>\n    );\n  };\n\n  return <h2>{formatStatus()}</h2>;\n};\n\nStatus.propTypes = {\n  usersAmount: PropTypes.number.isRequired,\n};\n\nexport default Status;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableHeader = ({ columns, onSort, sortedBy }) => {\n  const renderContent = (column) => {\n    if (sortedBy.iter === columns[column].path) {\n      if (sortedBy.order === 'asc') {\n        return (\n          <>\n            <span>{columns[column].name}</span>\n            <i className=\"bi bi-caret-down-fill\" />\n          </>\n        );\n      }\n      return (\n        <>\n          <span>{columns[column].name}</span>\n          <i className=\"bi bi-caret-up-fill\" />\n        </>\n      );\n    }\n    return columns[column].name;\n  };\n\n  const handleSort = (name) => {\n    if (sortedBy.iter === name) {\n      onSort({ ...sortedBy, order: sortedBy.order === 'asc' ? 'desc' : 'asc' });\n    } else {\n      onSort({ iter: name, order: 'asc' });\n    }\n  };\n\n  return (\n    <thead>\n      <tr>\n        {Object.keys(columns).map((column) => (\n          <th\n            key={column}\n            scope=\"col\"\n            onClick={columns[column].path ? () => handleSort(columns[column].path) : undefined}\n            role={columns[column].path && 'button'}\n          >\n            {renderContent(column)}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n\nTableHeader.propTypes = {\n  columns: PropTypes.object.isRequired,\n  onSort: PropTypes.func.isRequired,\n  sortedBy: PropTypes.object.isRequired,\n};\n\nexport default TableHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\n\nconst TableBody = ({ data, columns }) => {\n  const renderUserLink = (item) => <Link to={`/users/${item._id}`}>{item.name}</Link>;\n\n  const renderContent = (item, column) => {\n    const { component } = columns[column];\n    if (component) {\n      if (typeof component === 'function') {\n        return component(item);\n      }\n      return component;\n    }\n    return _.get(item, columns[column].path);\n  };\n\n  return (\n    <tbody>\n      {data.map((item) => (\n        <tr key={item._id}>\n          {Object.keys(columns).map((column) => (\n            <td key={column}>\n              {column === 'name' ? renderUserLink(item) : renderContent(item, column)}\n            </td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n};\n\nTableBody.propTypes = {\n  data: PropTypes.array.isRequired,\n  columns: PropTypes.object.isRequired,\n};\n\nexport default TableBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableHeader from './tableHeader';\nimport TableBody from './tableBody';\n\nconst Table = ({ data, columns, onSort, sortedBy, children }) => (\n  <table className=\"table\">\n    {children || (\n      <>\n        <TableHeader {...{ columns, onSort, sortedBy }} />\n        <TableBody {...{ data, columns }} />\n      </>\n    )}\n  </table>\n);\n\nTable.defaultProps = {\n  data: undefined,\n  columns: undefined,\n  onSort: undefined,\n  sortedBy: undefined,\n  children: undefined,\n};\n\nTable.propTypes = {\n  data: PropTypes.array,\n  columns: PropTypes.object,\n  onSort: PropTypes.func,\n  sortedBy: PropTypes.string,\n  children: PropTypes.array,\n};\n\nexport default Table;\n","import Table from './table';\nimport TableHeader from './tableHeader';\nimport TableBody from './tableBody';\n\nexport default Table;\nexport { TableHeader, TableBody };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Bookmark = ({ userId, selected, onBookmarkToggle }) => (\n  <button type=\"button\" className=\"btn\" onClick={() => onBookmarkToggle(userId)}>\n    {selected ? <i className=\"bi bi-bookmark-fill\" /> : <i className=\"bi bi-bookmark\" />}\n  </button>\n);\n\nBookmark.propTypes = {\n  userId: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  onBookmarkToggle: PropTypes.func.isRequired,\n};\n\nexport default Bookmark;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { getProfessionById, getProfessionsLoading } from '../../store/reducers/professions';\n\nconst Profession = ({ id }) => {\n  const isLoading = useSelector(getProfessionsLoading());\n  const profession = useSelector(getProfessionById(id));\n\n  if (!isLoading && profession) {\n    return <p>{profession.name}</p>;\n  }\n  return `loading...${id}`;\n};\n\nProfession.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default Profession;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table, { TableHeader, TableBody } from '../common/table';\nimport Bookmark from './bookmark';\nimport Qualities from './qualities';\nimport Profession from './profession';\n\nconst UsersTable = ({ users, onSort, sortedBy, onBookmarkToggle }) => {\n  const columns = {\n    name: { path: 'name', name: 'Имя' },\n    qualities: {\n      name: 'Качества',\n      component: (user) => <Qualities items={user.qualities} />,\n    },\n    profession: {\n      name: 'Профессия',\n      component: (user) => <Profession id={user.profession} />,\n    },\n    completedMeetings: { path: 'completedMeetings', name: 'Встретился, раз' },\n    rate: { path: 'rate', name: 'Оценка' },\n    bookmark: {\n      path: 'bookmark',\n      name: 'Избранное',\n      component: (user) => (\n        <Bookmark userId={user._id} selected={false} onBookmarkToggle={onBookmarkToggle} />\n      ),\n    },\n  };\n\n  return (\n    <Table>\n      <TableHeader {...{ columns, onSort, sortedBy }} />\n      <TableBody {...{ data: users, columns }} />\n    </Table>\n  );\n};\n\nUsersTable.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSort: PropTypes.func.isRequired,\n  sortedBy: PropTypes.object.isRequired,\n  onBookmarkToggle: PropTypes.func.isRequired,\n};\n\nexport default UsersTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst Pagination = ({ itemsAmount, itemsOnPage, currentIndex, onPaginate }) => {\n  const pagesAmount = Math.ceil(itemsAmount / itemsOnPage);\n  const pageIndexes = _.range(1, pagesAmount + 1);\n\n  if (pagesAmount === 1) return null;\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pageIndexes.map((pageIndex) => (\n          <li\n            key={`page_${pageIndex}`}\n            className={`page-item${currentIndex === pageIndex ? ' active' : ''}`}\n          >\n            <button type=\"button\" className=\"page-link\" onClick={() => onPaginate(pageIndex)}>\n              {pageIndex}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsAmount: PropTypes.number.isRequired,\n  itemsOnPage: PropTypes.number.isRequired,\n  currentIndex: PropTypes.number.isRequired,\n  onPaginate: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropsTypes from 'prop-types';\n\nconst Search = ({ placeholder, value, onChange }) => (\n  <input\n    className=\"form-control\"\n    type=\"text\"\n    value={value}\n    onChange={onChange}\n    placeholder={placeholder}\n  />\n);\n\nSearch.defaultProps = {\n  placeholder: '',\n};\n\nSearch.propTypes = {\n  placeholder: PropsTypes.string,\n  value: PropsTypes.string.isRequired,\n  onChange: PropsTypes.func.isRequired,\n};\n\nexport default Search;\n","import UsersListLayout from './usersListLayout';\n\nexport default UsersListLayout;\n","import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { useSelector } from 'react-redux';\nimport { paginate } from '../../../utils/paginate';\nimport GroupList from '../../common/groupList';\nimport Status from '../../ui/status';\nimport UsersTable from '../../ui/usersTable';\nimport Pagination from '../../common/pagination';\nimport Search from '../../common/search';\nimport { getProfessions, getProfessionsLoading } from '../../../store/reducers/professions';\nimport { getCurrentUserId, getUsers } from '../../../store/reducers/users';\n\nconst UsersListLayout = () => {\n  const USERS_ON_PAGE = 6;\n\n  const currentUserId = useSelector(getCurrentUserId());\n  const users = useSelector(getUsers());\n  const professions = useSelector(getProfessions());\n  const isLoadingProfessions = useSelector(getProfessionsLoading());\n  const [searchValue, setSearchValue] = useState('');\n  const [selectedProf, setSelectedProf] = useState();\n  const [sortBy, setSortBy] = useState({ iter: 'name', order: 'asc' });\n  const [currentIndex, setCurrentIndex] = useState(1);\n\n  useEffect(() => setCurrentIndex(1), [selectedProf]);\n\n  let filteredUsers;\n  if (searchValue) {\n    filteredUsers = users.filter((user) => new RegExp(searchValue, 'i').test(user.name));\n  } else if (selectedProf) {\n    filteredUsers = users.filter((user) => user.profession === selectedProf);\n  } else {\n    filteredUsers = users;\n  }\n  filteredUsers = filteredUsers.filter((user) => user._id !== currentUserId);\n\n  const sortedUsers = _.orderBy(filteredUsers, [sortBy.iter], [sortBy.order]);\n  const usersCrop = paginate(sortedUsers, USERS_ON_PAGE, currentIndex);\n  const usersAmount = filteredUsers.length;\n\n  if (usersCrop.length === 0 && usersAmount > 0) {\n    setCurrentIndex(currentIndex - 1);\n  }\n\n  const handleBookmarkToggle = (id) => {\n    // setUsers(users.map((user) => {\n    //   if (user.id === id) {\n    //     return { ...user, bookmark: !user.bookmark };\n    //   }\n    //   return user;\n    // }));\n    console.log(id);\n  };\n\n  const handleSearch = ({ target }) => {\n    setSearchValue(target.value);\n    setSelectedProf(null);\n  };\n\n  const handleProfessionSelect = (prof) => {\n    setSelectedProf(prof._id);\n    setSearchValue('');\n  };\n\n  const clearFilter = () => setSelectedProf();\n\n  const handleSort = (newSortBy) => setSortBy(newSortBy);\n\n  const handlePaginate = (index) => setCurrentIndex(index);\n\n  return (\n    <div className=\"d-flex\">\n      {!isLoadingProfessions && (\n        <div className=\"w-25 p-2\">\n          {professions && (\n            <GroupList\n              items={professions}\n              onItemSelect={handleProfessionSelect}\n              selectedItem={selectedProf}\n            />\n          )}\n          <button type=\"button\" className=\"btn btn-secondary mt-2\" onClick={clearFilter}>\n            Очистить фильтр\n          </button>\n        </div>\n      )}\n      <div className=\"p-2 d-flex flex-column w-100\">\n        <Status usersAmount={usersAmount} />\n        <Search placeholder=\"Search user...\" value={searchValue} onChange={handleSearch} />\n        {usersAmount > 0 && (\n          <UsersTable\n            users={usersCrop}\n            onSort={handleSort}\n            sortedBy={sortBy}\n            onBookmarkToggle={handleBookmarkToggle}\n          />\n        )}\n        <div className=\"d-flex justify-content-center\">\n          <Pagination\n            itemsAmount={usersAmount}\n            itemsOnPage={USERS_ON_PAGE}\n            currentIndex={currentIndex}\n            onPaginate={handlePaginate}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UsersListLayout;\n","export const paginate = (items, itemsOnPage, currentIndex) => {\n  const startIndex = itemsOnPage * (currentIndex - 1);\n  return [...items].splice(startIndex, itemsOnPage);\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { validator } from '../../../utils/validator';\nimport TextField from '../../common/form/textField';\nimport SelectField from '../../common/form/selectField';\nimport RadioField from '../../common/form/radioField';\nimport MultiSelectField from '../../common/form/multiSelectField';\nimport { getQualities, getQualitiesLoading } from '../../../store/reducers/qualities';\nimport { getProfessions } from '../../../store/reducers/professions';\nimport { getCurrentUserData, updateCurrentUser } from '../../../store/reducers/users';\n\nconst EditUserLayout = () => {\n  const history = useHistory();\n  const { userId } = useParams();\n  const professions = useSelector(getProfessions());\n  const qualities = useSelector(getQualities());\n  const qualitiesLoading = useSelector(getQualitiesLoading());\n  const currentUser = useSelector(getCurrentUserData());\n  const dispatch = useDispatch();\n\n  const convertToUse = (data) => ({\n    name: data.name,\n    email: data.email,\n    profession: data.profession,\n    sex: data.sex,\n    qualities: !qualitiesLoading\n      ? data.qualities.map((qualId) => ({\n          label: qualities.find((quality) => quality._id === qualId).name,\n          value: qualId,\n        }))\n      : [],\n  });\n\n  const [data, setData] = useState(convertToUse(currentUser));\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    if (!qualitiesLoading) {\n      setData(() => convertToUse(currentUser));\n    }\n  }, [qualitiesLoading]);\n\n  const convertToPatch = (data) => ({\n    name: data.name,\n    email: data.email,\n    profession: data.profession,\n    sex: data.sex,\n    qualities: data.qualities.map((quality) => quality.value),\n  });\n\n  const validationConfig = {\n    name: {\n      isRequired: (dataItem) => (dataItem.trim() === '' ? 'Name must be specified' : undefined),\n    },\n    email: {\n      isRequired: (dataItem) => (dataItem.trim() === '' ? 'Email must be specified' : undefined),\n      isEmail: (dataItem) =>\n        !/^\\S+@\\S+\\.\\S+$/.test(dataItem) ? 'Email input is invalid' : undefined,\n    },\n    profession: {\n      isRequired: (dataItem) =>\n        dataItem.trim() === '' ? 'Profession must be specified' : undefined,\n    },\n  };\n\n  const validate = () => {\n    const errors = validator(data, validationConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const handleChange = (dataItem) => {\n    setData((prevState) => ({\n      ...prevState,\n      [dataItem.name]: dataItem.value,\n    }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const isValid = validate();\n    if (!isValid) return;\n\n    const newData = convertToPatch(data);\n    dispatch(updateCurrentUser(newData));\n  };\n\n  const handleCancel = () => history.goBack();\n\n  if (currentUser._id !== userId) {\n    history.push(`/users/${userId}`);\n  }\n\n  const renderForm = () => (\n    <>\n      <h3 className=\"mb-4\">Register</h3>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          label=\"Name\"\n          name=\"name\"\n          value={data.name}\n          onChange={handleChange}\n          error={errors.name}\n        />\n        <TextField\n          label=\"Email\"\n          name=\"email\"\n          value={data.email}\n          onChange={handleChange}\n          error={errors.email}\n        />\n        <SelectField\n          label=\"Profession\"\n          options={professions}\n          name=\"profession\"\n          value={data.profession}\n          onChange={handleChange}\n          error={errors.profession}\n        />\n        <RadioField\n          label=\"Sex\"\n          onChange={handleChange}\n          name=\"sex\"\n          options={['male', 'female', 'other']}\n          value={data.sex}\n        />\n        <MultiSelectField\n          label=\"Qualities\"\n          name=\"qualities\"\n          options={qualities.map((quality) => ({\n            label: quality.name,\n            value: quality._id,\n          }))}\n          onChange={handleChange}\n          defaultValue={data.qualities}\n        />\n        <button\n          className=\"btn btn-primary w-100 mb-3\"\n          type=\"submit\"\n          disabled={Object.keys(errors).length !== 0}\n        >\n          Confirm\n        </button>\n        <button className=\"btn btn-secondary w-100\" type=\"button\" onClick={handleCancel}>\n          Cancel\n        </button>\n      </form>\n    </>\n  );\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-4\">\n        <div className=\"col-md-6 offset-md-3 shadow p-4 rounded\">\n          {data ? (\n            renderForm()\n          ) : (\n            <h2>\n              <span className=\"badge bg-primary m-2\">Loading...</span>\n            </h2>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditUserLayout;\n","import EditUserLayout from './editUserLayout';\n\nexport default EditUserLayout;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchUsers, getDataStatus } from '../../../store/reducers/users';\n\nconst UsersLoader = ({ children }) => {\n  const dispatch = useDispatch();\n  const dataLoaded = useSelector(getDataStatus());\n\n  useEffect(() => {\n    if (!dataLoaded) dispatch(fetchUsers());\n  }, []);\n\n  if (!dataLoaded) return <h1>Loading users...</h1>;\n  return children;\n};\n\nUsersLoader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default UsersLoader;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserLayout from '../components/layout/userLayout';\nimport UsersListLayout from '../components/layout/usersListLayout';\nimport EditUserLayout from '../components/layout/editUserLayout';\nimport UsersLoader from '../components/ui/hoc/usersLoader';\n\nconst Users = () => {\n  const { userId, status } = useParams();\n\n  return (\n    <UsersLoader>\n      {userId ? (\n        status === 'edit' ? (\n          <EditUserLayout id={userId} />\n        ) : (\n          <UserLayout id={userId} />\n        )\n      ) : (\n        <UsersListLayout />\n      )}\n    </UsersLoader>\n  );\n};\n\nexport default Users;\n","import React from 'react';\n\nconst Error404 = () => (\n  <>\n    <h1>Error 404</h1>\n    <h3>Page was not founded</h3>\n  </>\n);\n\nexport default Error404;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from '../../store/reducers/users';\n\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\n  const isLoggedIn = useSelector(getIsLoggedIn());\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!isLoggedIn) {\n          return (\n            <Redirect\n              to={{\n                pathname: '/auth/login',\n                state: { from: props.location },\n              }}\n            />\n          );\n        }\n        return Component ? <Component {...props} /> : children;\n      }}\n    />\n  );\n};\n\nProtectedRoute.defaultProps = {\n  location: undefined,\n  component: null,\n  children: null,\n};\n\nProtectedRoute.propTypes = {\n  location: PropTypes.object,\n  component: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nexport default ProtectedRoute;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchUsers, getIsLoggedIn, getUsersLoadingStatus } from '../../../store/reducers/users';\nimport { fetchQualities } from '../../../store/reducers/qualities';\nimport { fetchProfessions } from '../../../store/reducers/professions';\n\nconst AppLoader = ({ children }) => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(getIsLoggedIn());\n  const isUsersLoading = useSelector(getUsersLoadingStatus());\n\n  useEffect(() => {\n    dispatch(fetchQualities());\n    dispatch(fetchProfessions());\n    if (isLoggedIn) {\n      dispatch(fetchUsers());\n    }\n  }, [isLoggedIn]);\n\n  if (isUsersLoading) return <h1>Loading</h1>;\n  return children;\n};\n\nAppLoader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default AppLoader;\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Navbar from './components/ui/navbar';\nimport Main from './pages/main';\nimport Auth from './pages/auth';\nimport Users from './pages/users';\nimport Error404 from './pages/error404';\nimport ProtectedRoute from './components/common/protectedRoute';\nimport AppLoader from './components/ui/hoc/appLoader';\n\nconst App = () => (\n  <>\n    <AppLoader>\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/auth\" component={Auth} />\n        <ProtectedRoute path=\"/users/:userId?/:status?\" component={Users} />\n        <Route path=\"/404\" component={Error404} />\n        <Redirect to=\"/\" path=\"/main\" />\n        <Redirect to=\"/auth/login\" path=\"/login\" />\n        <Redirect to=\"/auth/register\" path=\"/register\" />\n        <Redirect to=\"/404\" />\n      </Switch>\n    </AppLoader>\n    <ToastContainer />\n  </>\n);\n\nexport default App;\n","import store from './store';\n\nexport default store;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport qualitiesReducer from './reducers/qualities';\nimport professionsReducer from './reducers/professions';\nimport usersReducer from './reducers/users';\nimport commentsReducer from './reducers/comments';\n\nconst store = configureStore({\n  reducer: combineReducers({\n    qualities: qualitiesReducer,\n    professions: professionsReducer,\n    users: usersReducer,\n    comments: commentsReducer,\n  }),\n});\n\nexport default store;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport App from './app';\nimport store from './store';\nimport history from './utils/history';\n\nReactDOM.render(\n  <StrictMode>\n    <Router history={history}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}